{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/react-redux/src/components/TodoItem/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport { createDone, createDelete, createTodo } from \"../../store/todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoItemContainer = styled(\"li\")`\n  padding: 4px;\n  background-color: ${_ref => {\n  let {\n    completed\n  } = _ref;\n  return completed ? \"green\" : \"transparent\";\n}};\n`;\n_c = TodoItemContainer;\n\nconst TodoItem = _ref2 => {\n  _s();\n\n  let {\n    title,\n    completed,\n    id\n  } = _ref2;\n  const dispatch = useDispatch();\n\n  const handleDone = id => {\n    dispatch(createDone(id));\n  };\n\n  const handleDelete = id => {\n    dispatch(createDelete(id));\n  };\n\n  const [edit, setEdit] = useState(null); //const [value, setValue] = useState(\"\");\n\n  const handleEdit = id => {\n    setEdit(id); // setValue(title);\n\n    console.log('dcsdc');\n  };\n\n  const handleValue = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TodoItemContainer, {\n    completed: completed,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [edit === id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), edit === id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveTodo,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"button\",\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEdit,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"button\",\n          children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), !done && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDone,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"button\",\n          children: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDelete,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"button\",\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoItem, \"rn72Bx3X505XQN0GHxZ0pkP2B2Y=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = TodoItem;\nexport default TodoItem;\n/*\n{edit === id ? (\n  <div>\n    <Input value={value} onChange={handleValue} />\n  </div>\n) : (\n  <p>{title}</p>\n)}\n{edit === id ? (\n  <div>\n    <Button\n      //onClick={handleSaveTodo}\n      variant=\"outlined\"\n      size=\"small\"\n      type=\"button\"\n    >\n      Сохранить\n    </Button>\n  </div>\n) : (\n  <div>\n    <Button onClick={handleEdit} type=\"button\">\n      Редактировать\n    </Button>\n    {!completed && (\n      <Button onClick={handleDone} type=\"button\">\n        Выполнено\n      </Button>\n    )}\n    <Button onClick={handleDelete} type=\"button\">\n      Удалить\n    </Button>\n  </div>\n)}\n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoItemContainer\");\n$RefreshReg$(_c2, \"TodoItem\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/react-redux/src/components/TodoItem/TodoItem.js"],"names":["React","useState","useCallback","styled","useDispatch","Button","Input","createDone","createDelete","createTodo","TodoItemContainer","completed","TodoItem","title","id","dispatch","handleDone","handleDelete","edit","setEdit","handleEdit","console","log","handleValue","e","setValue","target","value","name","handleSaveTodo","done"],"mappings":"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","sourcesContent":["import React, { useState,useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport { createDone, createDelete,createTodo } from \"../../store/todo\";\n\nconst TodoItemContainer = styled(\"li\")`\n  padding: 4px;\n  background-color: ${({ completed }) => (completed ? \"green\" : \"transparent\")};\n`;\n\nconst TodoItem = ({ title, completed, id }) => {\n  const dispatch = useDispatch();\n  const handleDone = (id) => {\n    dispatch(createDone(id));\n  };\n  const handleDelete = (id) => {\n    dispatch(createDelete(id));\n  };\n\n  const [edit, setEdit] = useState(null);\n  //const [value, setValue] = useState(\"\");\n\n  const handleEdit = (id) => {\n    setEdit(id);\n   // setValue(title);\n   console.log('dcsdc')\n  };\n\n  const handleValue = useCallback((e) => {\n  setValue(e.target.value);\n  }, []);\n\n  return (\n    <TodoItemContainer completed={completed}>\n      <div key={id}>\n      {edit === id ? (\n        <div>\n          <Input value={value}  />\n        </div>\n      ) : (\n        <p>{name}</p>\n      )}\n      {edit === id ? (\n        <div>\n          <Button\n            onClick={handleSaveTodo}\n            variant=\"outlined\"\n            size=\"small\"\n            type=\"button\"\n          >\n            Сохранить\n          </Button>\n        </div>\n      ) : (\n        <div>\n          <Button\n            onClick={handleEdit}\n            variant=\"outlined\"\n            size=\"small\"\n            type=\"button\"\n          >\n            Редактировать\n          </Button>\n          {!done && (\n            <Button\n              onClick={handleDone}\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"button\"\n            >\n              Выполнено\n            </Button>\n          )}\n          <Button\n            onClick={handleDelete}\n            variant=\"outlined\"\n            size=\"small\"\n            type=\"button\"\n          >\n            Удалить\n          </Button>\n        </div>\n      )}\n        </div>\n      \n    </TodoItemContainer>\n  );\n};\n\nexport default TodoItem;\n\n/*\n{edit === id ? (\n  <div>\n    <Input value={value} onChange={handleValue} />\n  </div>\n) : (\n  <p>{title}</p>\n)}\n{edit === id ? (\n  <div>\n    <Button\n      //onClick={handleSaveTodo}\n      variant=\"outlined\"\n      size=\"small\"\n      type=\"button\"\n    >\n      Сохранить\n    </Button>\n  </div>\n) : (\n  <div>\n    <Button onClick={handleEdit} type=\"button\">\n      Редактировать\n    </Button>\n    {!completed && (\n      <Button onClick={handleDone} type=\"button\">\n        Выполнено\n      </Button>\n    )}\n    <Button onClick={handleDelete} type=\"button\">\n      Удалить\n    </Button>\n  </div>\n)}\n*/"]},"metadata":{},"sourceType":"module"}
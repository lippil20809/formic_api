{"ast":null,"code":"export const getSlice = state => state.todo;\nconsole.log(getSlice);\nexport const getList = state => {\n  let list;\n  console.log(state);\n\n  if (state.todo.filterStatus === \"All\") {\n    list = state.todo.todoList;\n  }\n\n  if (state.todo.filterStatus === \"Done\") {\n    list = state.todo.todoList.filter(todo => todo.completed === true);\n  }\n\n  if (state.todo.filterStatus === \"Delete\") {\n    list = state.todo.deletedTodoList;\n  }\n\n  if (state.todo.listfilterValue) {\n    list = list.filter(todo => todo.title.toLocaleLowerCase().includes(state.todo.filterValue.toLocaleLowerCase()));\n  }\n\n  return list;\n};","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/react-redux/src/store/todo/todo.selectors.js"],"names":["getSlice","state","todo","console","log","getList","list","filterStatus","todoList","filter","completed","deletedTodoList","listfilterValue","title","toLocaleLowerCase","includes","filterValue"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAlC;AACPC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,OAAO,MAAOK,OAAO,GAAIJ,KAAD,IAAW;AAC/B,MAAIK,IAAJ;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,MAAIA,KAAK,CAACC,IAAN,CAAWK,YAAX,KAA4B,KAAhC,EAAuC;AACrCD,IAAAA,IAAI,GAAGL,KAAK,CAACC,IAAN,CAAWM,QAAlB;AACD;;AACD,MAAIP,KAAK,CAACC,IAAN,CAAWK,YAAX,KAA4B,MAAhC,EAAwC;AACtCD,IAAAA,IAAI,GAAGL,KAAK,CAACC,IAAN,CAAWM,QAAX,CAAoBC,MAApB,CAA4BP,IAAD,IAAUA,IAAI,CAACQ,SAAL,KAAmB,IAAxD,CAAP;AACD;;AACD,MAAIT,KAAK,CAACC,IAAN,CAAWK,YAAX,KAA4B,QAAhC,EAA0C;AACxCD,IAAAA,IAAI,GAAGL,KAAK,CAACC,IAAN,CAAWS,eAAlB;AACD;;AACD,MAAIV,KAAK,CAACC,IAAN,CAAWU,eAAf,EAAgC;AAC9BN,IAAAA,IAAI,GAAGA,IAAI,CAACG,MAAL,CAAaP,IAAD,IACjBA,IAAI,CAACW,KAAL,CACGC,iBADH,GAEGC,QAFH,CAEYd,KAAK,CAACC,IAAN,CAAWc,WAAX,CAAuBF,iBAAvB,EAFZ,CADK,CAAP;AAKD;;AACD,SAAOR,IAAP;AACD,CApBI","sourcesContent":["export const getSlice = (state) => state.todo;\nconsole.log(getSlice)\nexport const  getList = (state) => {\n    let list;\n    console.log(state)\n    if (state.todo.filterStatus === \"All\") {\n      list = state.todo.todoList;\n    }\n    if (state.todo.filterStatus === \"Done\") {\n      list = state.todo.todoList.filter((todo) => todo.completed === true);\n    }\n    if (state.todo.filterStatus === \"Delete\") {\n      list = state.todo.deletedTodoList;\n    }\n    if (state.todo.listfilterValue) {\n      list = list.filter((todo) =>\n        todo.title\n          .toLocaleLowerCase()\n          .includes(state.todo.filterValue.toLocaleLowerCase())\n      );\n    }\n    return list;\n  };\n\n  "]},"metadata":{},"sourceType":"module"}
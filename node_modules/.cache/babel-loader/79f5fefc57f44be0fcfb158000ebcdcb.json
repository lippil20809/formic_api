{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/react-redux-classwork/src/containers/Posts/Posts.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Post from \"../../components/Post\";\nimport { getPosts, getSlice, deletePost } from \"../../store/posts\";\nimport { Statuses } from \"store/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsWrapper = styled(\"section\")`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n_c = PostsWrapper;\n\nconst Posts = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    posts,\n    postsRequestStatus\n  } = useSelector(getSlice);\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  const handleClick = id => {\n    dispatch(deletePost(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostsWrapper, {\n    children: [postsRequestStatus === Statuses.PENDING && \"loading...\", postsRequestStatus === Statuses.FAILURE && \"some error...\", posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/_jsxDEV(Post, { ...post,\n      onClick: handleClick\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"6Jy/VgsH3MJSFnGS9qtrspjRDT8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = Posts;\nexport default Posts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostsWrapper\");\n$RefreshReg$(_c2, \"Posts\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/react-redux-classwork/src/containers/Posts/Posts.tsx"],"names":["React","useEffect","useDispatch","useSelector","styled","Post","getPosts","getSlice","deletePost","Statuses","PostsWrapper","Posts","dispatch","posts","postsRequestStatus","handleClick","id","PENDING","FAILURE","map","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA4BC,UAA5B,QAA8C,mBAA9C;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,YAAY,GAAGN,MAAM,CAAC,SAAD,CAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMM,Y;;AAWN,MAAMC,KAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAgCX,WAAW,CAACI,QAAD,CAAjD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACN,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,CAACM,QAAD,CAFM,CAAT;;AAIA,QAAMG,WAAW,GAAIC,EAAD,IAAgB;AAElCJ,IAAAA,QAAQ,CAACJ,UAAU,CAACQ,EAAD,CAAX,CAAR;AAED,GAJD;;AAMA,sBACE,QAAC,YAAD;AAAA,eACGF,kBAAkB,KAAKL,QAAQ,CAACQ,OAAhC,IAA2C,YAD9C,EAEGH,kBAAkB,KAAKL,QAAQ,CAACS,OAAhC,IAA2C,eAF9C,EAGGL,KAHH,aAGGA,KAHH,uBAGGA,KAAK,CAAEM,GAAP,CAAYC,IAAD,iBACV,QAAC,IAAD,OAAwBA,IAAxB;AAA8B,MAAA,OAAO,EAAEL;AAAvC,OAAWK,IAAI,CAACJ,EAAhB;AAAA;AAAA;AAAA;AAAA,YADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAvBD;;GAAML,K;UACaT,W,EACqBC,W;;;MAFlCQ,K;AAyBN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Post from \"../../components/Post\";\nimport { getPosts, getSlice,deletePost } from \"../../store/posts\";\nimport { Statuses } from \"store/types\";\n\nconst PostsWrapper = styled(\"section\")`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n\nconst Posts: React.FC = () => {\n  const dispatch = useDispatch();\n  const { posts, postsRequestStatus } = useSelector(getSlice);\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  const handleClick = (id: number) => {\n    \n    dispatch(deletePost(id))\n\n  };\n\n  return (\n    <PostsWrapper>\n      {postsRequestStatus === Statuses.PENDING && \"loading...\"}\n      {postsRequestStatus === Statuses.FAILURE && \"some error...\"}\n      {posts?.map((post) => (\n        <Post key={post.id} {...post} onClick={handleClick} />\n      ))}\n    </PostsWrapper>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/react-redux/src/components/TodoItem/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocales } from \"../../providers/LocalesProvider\";\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport { createDone, createDelete, createSave } from \"../../store/todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoItemContainer = styled(\"li\")`\n  padding: 4px;\n  border-color: ${props => props.theme.button.bc};\n  \n  > p {\n    margin: 6px 0px 0px;\n    font-size: 10px;\n    color: ${props => props.theme.color.main};\n\n  }\n`;\n_c = TodoItemContainer;\n\nconst TodoItem = _ref => {\n  _s();\n\n  let {\n    title,\n    completed,\n    id\n  } = _ref;\n  const dispatch = useDispatch();\n  const [mode, setMode] = useState(\"view\");\n  const [value, setValue] = useState(title);\n  const {\n    trans\n  } = useLocales();\n\n  const handleDone = () => {\n    dispatch(createDone(id));\n  };\n\n  const handleDelete = () => {\n    dispatch(createDelete(id));\n  };\n\n  const handleValue = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  const handleEdit = () => {\n    setMode(\"edit\");\n  };\n\n  const handleSave = () => {\n    dispatch(createSave(value, id));\n    setMode(\"view\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoItemContainer, {\n    completed: completed,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [mode === \"edit\" ? /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: value,\n          onChange: handleValue,\n          id: \"task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSave,\n          type: \"button\",\n          children: trans.saveButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleEdit,\n        type: \"button\",\n        children: trans.editButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDone,\n        type: \"button\",\n        children: trans.doneButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDelete,\n        type: \"button\",\n        children: trans.deleteButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoItem, \"8XyG9m2Cg6EQjcLaMMYTFllSJic=\", false, function () {\n  return [useDispatch, useLocales];\n});\n\n_c2 = TodoItem;\nexport default TodoItem;\n/*\n{edit === id ? (\n  <div>\n    <Input value={value} onChange={handleValue} />\n  </div>\n) : (\n  <p>{title}</p>\n)}\n{edit === id ? (\n  <div>\n    <Button\n      //onClick={handleSaveTodo}\n      variant=\"outlined\"\n      size=\"small\"\n      type=\"button\"\n    >\n      Сохранить\n    </Button>\n  </div>\n) : (\n  <div>\n    <Button onClick={handleEdit} type=\"button\">\n      Редактировать\n    </Button>\n    {!completed && (\n      <Button onClick={handleDone} type=\"button\">\n        Выполнено\n      </Button>\n    )}\n    <Button onClick={handleDelete} type=\"button\">\n      Удалить\n    </Button>\n  </div>\n)}\n\n\nconst handleEdit = (id) => {\n    setEdit(id);\n   // setValue(title);\n  };\n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoItemContainer\");\n$RefreshReg$(_c2, \"TodoItem\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/react-redux/src/components/TodoItem/TodoItem.js"],"names":["React","useState","useCallback","styled","useDispatch","useLocales","Button","Input","createDone","createDelete","createSave","TodoItemContainer","props","theme","button","bc","color","main","TodoItem","title","completed","id","dispatch","mode","setMode","value","setValue","trans","handleDone","handleDelete","handleValue","e","target","handleEdit","handleSave","saveButton","editButton","doneButton","deleteButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SACEC,UADF,EAEEC,YAFF,EAGEC,UAHF,QAIO,kBAJP;;AAMA,MAAMC,iBAAiB,GAAGR,MAAM,CAAC,IAAD,CAAO;AACvC;AACA,kBAAmBS,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAAG;AACnD;AACA;AACA;AACA;AACA,aAAcH,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYG,KAAZ,CAAkBC,IAAK;AAC/C;AACA;AACA,CAVA;KAAMN,iB;;AAYN,MAAMO,QAAQ,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,GAA6B;AAC7C,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,MAAD,CAAhC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAACkB,KAAD,CAAlC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAUtB,UAAU,EAA1B;;AAEA,QAAMuB,UAAU,GAAG,MAAM;AACvBN,IAAAA,QAAQ,CAACd,UAAU,CAACa,EAAD,CAAX,CAAR;AACD,GAFD;;AAGA,QAAMQ,YAAY,GAAG,MAAM;AACzBP,IAAAA,QAAQ,CAACb,YAAY,CAACY,EAAD,CAAb,CAAR;AACD,GAFD;;AAMA,QAAMS,WAAW,GAAG5B,WAAW,CAAE6B,CAAD,IAAO;AACrCL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAAR;AACD,GAF8B,EAE5B,EAF4B,CAA/B;;AAIA,QAAMQ,UAAU,GAAG,MAAM;AACvBT,IAAAA,OAAO,CAAC,MAAD,CAAP;AACD,GAFD;;AAIA,QAAMU,UAAU,GAAG,MAAM;AACvBZ,IAAAA,QAAQ,CAACZ,UAAU,CAACe,KAAD,EAAQJ,EAAR,CAAX,CAAR;AACAG,IAAAA,OAAO,CAAC,MAAD,CAAP;AACD,GAHD;;AAKA,sBACE,QAAC,iBAAD;AAAmB,IAAA,SAAS,EAAEJ,SAA9B;AAAA,2BACE;AAAA,iBACGG,IAAI,KAAK,MAAT,gBACC;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEE,KAAd;AAAqB,UAAA,QAAQ,EAAEK,WAA/B;AAA4C,UAAA,EAAE,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEI,UAAjB;AAA6B,UAAA,IAAI,EAAC,QAAlC;AAAA,oBACGP,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAQC;AAAA,kBAAIhB;AAAJ;AAAA;AAAA;AAAA;AAAA,cATJ,eAYE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEc,UAAjB;AAA6B,QAAA,IAAI,EAAC,QAAlC;AAAA,kBACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,cAZF,eAeE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAER,UAAjB;AAA6B,QAAA,IAAI,EAAC,QAAlC;AAAA,kBACGD,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,cAfF,eAkBE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAER,YAAjB;AAA+B,QAAA,IAAI,EAAC,QAApC;AAAA,kBACGF,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAtDD;;GAAMpB,Q;UACad,W,EAGDC,U;;;MAJZa,Q;AAwDN,eAAeA,QAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocales } from \"../../providers/LocalesProvider\";\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport {\n  createDone,\n  createDelete,\n  createSave,\n} from \"../../store/todo\";\n\nconst TodoItemContainer = styled(\"li\")`\n  padding: 4px;\n  border-color: ${(props) => props.theme.button.bc};\n  \n  > p {\n    margin: 6px 0px 0px;\n    font-size: 10px;\n    color: ${(props) => props.theme.color.main};\n\n  }\n`;\n\nconst TodoItem = ({ title, completed, id }) => {\n  const dispatch = useDispatch();\n  const [mode, setMode] = useState(\"view\");\n  const [value, setValue] = useState(title);\n  const {trans} = useLocales()\n\n  const handleDone = () => {\n    dispatch(createDone(id));\n  };\n  const handleDelete = () => {\n    dispatch(createDelete(id));\n  };\n\n \n\n  const handleValue = useCallback((e) => {\n    setValue(e.target.value);\n  }, []);\n\n  const handleEdit = () => {\n    setMode(\"edit\");\n  };\n\n  const handleSave = () => {\n    dispatch(createSave(value, id));\n    setMode(\"view\");\n  };\n\n  return (\n    <TodoItemContainer completed={completed}>\n      <div>\n        {mode === \"edit\" ? (\n          <form>\n            <Input value={value} onChange={handleValue} id=\"task\" />\n            <Button onClick={handleSave} type=\"button\">\n              {trans.saveButton}\n            </Button>\n          </form>\n        ) : (\n          <p>{title}</p>\n        )}\n\n        <Button onClick={handleEdit} type=\"button\">\n          {trans.editButton}\n        </Button>\n        <Button onClick={handleDone} type=\"button\">\n          {trans.doneButton}\n        </Button>\n        <Button onClick={handleDelete} type=\"button\">\n          {trans.deleteButton}\n        </Button>\n      </div>\n    </TodoItemContainer>\n  );\n};\n\nexport default TodoItem;\n\n/*\n{edit === id ? (\n  <div>\n    <Input value={value} onChange={handleValue} />\n  </div>\n) : (\n  <p>{title}</p>\n)}\n{edit === id ? (\n  <div>\n    <Button\n      //onClick={handleSaveTodo}\n      variant=\"outlined\"\n      size=\"small\"\n      type=\"button\"\n    >\n      Сохранить\n    </Button>\n  </div>\n) : (\n  <div>\n    <Button onClick={handleEdit} type=\"button\">\n      Редактировать\n    </Button>\n    {!completed && (\n      <Button onClick={handleDone} type=\"button\">\n        Выполнено\n      </Button>\n    )}\n    <Button onClick={handleDelete} type=\"button\">\n      Удалить\n    </Button>\n  </div>\n)}\n\n\nconst handleEdit = (id) => {\n    setEdit(id);\n   // setValue(title);\n  };\n*/\n"]},"metadata":{},"sourceType":"module"}
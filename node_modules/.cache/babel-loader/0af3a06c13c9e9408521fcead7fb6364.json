{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst useRequest = request => {\n  _s();\n\n  const params = useParams();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    request().then(data => setData(data)).catch(error => setError(error)).finally(() => setLoading(false));\n  }, [request]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n\n_s(useRequest, \"1qww0GQ9mdojT+b9BHS7etycfR4=\", false, function () {\n  return [useParams];\n});\n\nexport default useRequest;","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/AppRouter/src/hooks/useRequest.js"],"names":["useState","useEffect","useParams","useRequest","request","params","data","setData","loading","setLoading","error","setError","then","catch","finally"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,UAAU,GAAIC,OAAD,IAAa;AAAA;;AAC9B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,IAAAA,OAAO,GACJQ,IADH,CACSN,IAAD,IAAUC,OAAO,CAACD,IAAD,CADzB,EAEGO,KAFH,CAEUH,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAF5B,EAGGI,OAHH,CAGW,MAAML,UAAU,CAAC,KAAD,CAH3B;AAID,GANQ,EAMN,CAACL,OAAD,CANM,CAAT;AAQA,SAAO;AAAEE,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACD,CAhBD;;GAAMP,U;UACWD,S;;;AAiBjB,eAAeC,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst useRequest = (request) => {\n  const params = useParams();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    request()\n      .then((data) => setData(data))\n      .catch((error) => setError(error))\n      .finally(() => setLoading(false));\n  }, [request]);\n\n  return { data, loading, error };\n};\n\nexport default useRequest;\n"]},"metadata":{},"sourceType":"module"}
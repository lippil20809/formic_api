{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/react-jsx-classwork/src/components/Form/Form.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { validateForm } from \"./helpers/validateForm\";\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContainer = styled(\"form\")`\n  padding: 12px 16px;\n  display: flex;\n  flex-direction: column;\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n\n  > div {\n    margin-top: 8px;\n  }\n`;\n_c = FormContainer;\n\nclass Form extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: \"\",\n      error: validateForm(\"\"),\n      touched: false\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value,\n        error: validateForm(e.target.value)\n      });\n    };\n\n    this.handleBlur = () => {\n      this.setState({\n        touched: true\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        onCreateTodo\n      } = this.props;\n      const {\n        name,\n        error,\n        touched\n      } = this.state;\n\n      if (error && !touched) {\n        this.setState({\n          touched: true\n        });\n        return;\n      }\n\n      if (!error) {\n        onCreateTodo(name);\n        this.setState({\n          name: \"\",\n          error: validateForm(\"\"),\n          touched: false\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      name,\n      error,\n      touched\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"name\",\n        label: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435\",\n        id: \"create\",\n        error: Boolean(touched && error) // or !!error\n        ,\n        description: touched && error,\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        value: name,\n        onBlur: this.handleBlur,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleSubmit,\n          variant: \"contained\",\n          size: \"large\",\n          type: \"submit\",\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormContainer\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/react-jsx-classwork/src/components/Form/Form.js"],"names":["React","styled","validateForm","Button","Input","FormContainer","Form","Component","state","name","error","touched","handleChange","e","setState","target","value","handleBlur","handleSubmit","preventDefault","onCreateTodo","props","render","Boolean"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,aAAa,GAAGJ,MAAM,CAAC,MAAD,CAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;KAAMI,a;;AAYN,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAER,YAAY,CAAC,EAAD,CAFb;AAGNS,MAAAA,OAAO,EAAE;AAHH,KADyB;;AAAA,SAOjCC,YAPiC,GAOjBC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASN,IAAV,GAAiBI,CAAC,CAACE,MAAF,CAASC,KADd;AAEZN,QAAAA,KAAK,EAAER,YAAY,CAACW,CAAC,CAACE,MAAF,CAASC,KAAV;AAFP,OAAd;AAID,KAZgC;;AAAA,SAcjCC,UAdiC,GAcpB,MAAM;AACjB,WAAKH,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAlBgC;;AAAA,SAoBjCO,YApBiC,GAoBjBL,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACM,cAAF;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAmB,KAAKC,KAA9B;AACA,YAAM;AAAEZ,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,UAA2B,KAAKH,KAAtC;;AAEA,UAAIE,KAAK,IAAI,CAACC,OAAd,EAAuB;AACrB,aAAKG,QAAL,CAAc;AAAEH,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA;AACD;;AAED,UAAI,CAACD,KAAL,EAAY;AACVU,QAAAA,YAAY,CAACX,IAAD,CAAZ;AACA,aAAKK,QAAL,CAAc;AAAEL,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,KAAK,EAAER,YAAY,CAAC,EAAD,CAA/B;AAAqCS,UAAAA,OAAO,EAAE;AAA9C,SAAd;AACD;AACF,KAnCgC;AAAA;;AAqCjCW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA2B,KAAKH,KAAtC;AAEA,wBACE,QAAC,aAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAC,2EAFR;AAGE,QAAA,EAAE,EAAC,QAHL;AAIE,QAAA,KAAK,EAAEe,OAAO,CAACZ,OAAO,IAAID,KAAZ,CAJhB,CAIoC;AAJpC;AAKE,QAAA,WAAW,EAAEC,OAAO,IAAID,KAL1B;AAME,QAAA,WAAW,EAAC,kDANd;AAOE,QAAA,KAAK,EAAED,IAPT;AAQE,QAAA,MAAM,EAAE,KAAKQ,UARf;AASE,QAAA,QAAQ,EAAE,KAAKL;AATjB;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,KAAKM,YADhB;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AAjEgC;;AAoEnC,eAAeZ,IAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { validateForm } from \"./helpers/validateForm\";\nimport Button from \"../Button\";\nimport Input from \"../Input\";\n\nconst FormContainer = styled(\"form\")`\n  padding: 12px 16px;\n  display: flex;\n  flex-direction: column;\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n\n  > div {\n    margin-top: 8px;\n  }\n`;\n\nclass Form extends React.Component {\n  state = {\n    name: \"\",\n    error: validateForm(\"\"),\n    touched: false,\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      error: validateForm(e.target.value),\n    });\n  };\n\n  handleBlur = () => {\n    this.setState({\n      touched: true,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { onCreateTodo } = this.props;\n    const { name, error, touched } = this.state;\n\n    if (error && !touched) {\n      this.setState({ touched: true });\n      return;\n    }\n\n    if (!error) {\n      onCreateTodo(name);\n      this.setState({ name: \"\", error: validateForm(\"\"), touched: false });\n    }\n  };\n\n  render() {\n    const { name, error, touched } = this.state;\n\n    return (\n      <FormContainer>\n        <Input\n          name=\"name\"\n          label=\"Новое задание\"\n          id=\"create\"\n          error={Boolean(touched && error)} // or !!error\n          description={touched && error}\n          placeholder=\"Название\"\n          value={name}\n          onBlur={this.handleBlur}\n          onChange={this.handleChange}\n        />\n        <div>\n          <Button\n            onClick={this.handleSubmit}\n            variant=\"contained\"\n            size=\"large\"\n            type=\"submit\"\n          >\n            Создать\n          </Button>\n        </div>\n      </FormContainer>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/react-redux/src/components/TodoItem/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport Form from '../../containers/TodoForm';\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport { createDone, createDelete, editTodo } from \"../../store/todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoItemContainer = styled(\"li\")`\n  padding: 4px;\n  background-color: ${_ref => {\n  let {\n    completed\n  } = _ref;\n  return completed ? \"green\" : \"transparent\";\n}};\n`;\n_c = TodoItemContainer;\n\nconst TodoItem = _ref2 => {\n  _s();\n\n  let {\n    title,\n    completed,\n    id\n  } = _ref2;\n  const dispatch = useDispatch();\n\n  const handleDone = id => {\n    dispatch(createDone(id));\n  };\n\n  const handleDelete = id => {\n    dispatch(createDelete(id));\n  };\n\n  const [edit, setEdit] = useState(null);\n  const [value, setValue] = useState('');\n  const handleValue = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  const update = (id, editTitle) => {\n    dispatch(editTodo({\n      id,\n      editTitle\n    }));\n  };\n\n  const handleEdit = (id, title, e) => {\n    e.preventDefault();\n    update(id, editTitle);\n    setEdit(id);\n    setValue(title);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoItemContainer, {\n    completed: completed,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [edit ? /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleEdit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: value,\n          onChange: handleValue,\n          label: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435\",\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\",\n          id: \"task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDone,\n        type: \"button\",\n        children: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDelete,\n        type: \"button\",\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoItem, \"PgQFxvYdn9l1Ea4dDN+SQlwjE+M=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = TodoItem;\nexport default TodoItem;\n/*\n{edit === id ? (\n  <div>\n    <Input value={value} onChange={handleValue} />\n  </div>\n) : (\n  <p>{title}</p>\n)}\n{edit === id ? (\n  <div>\n    <Button\n      //onClick={handleSaveTodo}\n      variant=\"outlined\"\n      size=\"small\"\n      type=\"button\"\n    >\n      Сохранить\n    </Button>\n  </div>\n) : (\n  <div>\n    <Button onClick={handleEdit} type=\"button\">\n      Редактировать\n    </Button>\n    {!completed && (\n      <Button onClick={handleDone} type=\"button\">\n        Выполнено\n      </Button>\n    )}\n    <Button onClick={handleDelete} type=\"button\">\n      Удалить\n    </Button>\n  </div>\n)}\n\n\nconst handleEdit = (id) => {\n    setEdit(id);\n   // setValue(title);\n  };\n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoItemContainer\");\n$RefreshReg$(_c2, \"TodoItem\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/react-redux/src/components/TodoItem/TodoItem.js"],"names":["React","useState","useCallback","styled","useDispatch","Form","Button","Input","createDone","createDelete","editTodo","TodoItemContainer","completed","TodoItem","title","id","dispatch","handleDone","handleDelete","edit","setEdit","value","setValue","handleValue","e","target","update","editTitle","handleEdit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport Form from '../../containers/TodoForm'\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport { createDone, createDelete, editTodo} from \"../../store/todo\";\n\nconst TodoItemContainer = styled(\"li\")`\n  padding: 4px;\n  background-color: ${({ completed }) => (completed ? \"green\" : \"transparent\")};\n`;\n\nconst TodoItem = ({ title, completed, id }) => {\n  const dispatch = useDispatch();\n  const handleDone = (id) => {\n    dispatch(createDone(id));\n  };\n  const handleDelete = (id) => {\n    dispatch(createDelete(id));\n  };\n\n  const [edit, setEdit] = useState(null);\n  const [value, setValue] = useState('');\n\n  const handleValue = useCallback((e) => {\n  setValue(e.target.value);\n  }, []);\n\n  const update = (id,editTitle ) => {\n    dispatch(editTodo({id,editTitle}))\n  }\n\n  const handleEdit = (id,title,e) => {\n    e.preventDefault();\n    update(id,editTitle )\n    setEdit(id);\n    setValue(title);\n\n  };  \n\n\n\n  return (\n    <TodoItemContainer completed={completed}>\n      <div>\n        { edit ? (\n          <Form onSubmit={handleEdit}>\n          <Input\n            value={value}\n            onChange={handleValue}\n            label=\"Новое задание\"\n            placeholder=\"Название задания\"\n            id=\"task\"\n          />\n          <Button type=\"submit\">Создать</Button>\n        </Form>\n        ): (\n            <p>{title}</p>\n          )}\n        \n\n        <Button type=\"button\">Редактировать</Button>\n        <Button onClick={handleDone} type=\"button\">\n          Выполнено\n        </Button>\n        <Button onClick={handleDelete} type=\"button\">\n          Удалить\n        </Button>\n      </div>\n    </TodoItemContainer>\n  );\n};\n\nexport default TodoItem;\n\n/*\n{edit === id ? (\n  <div>\n    <Input value={value} onChange={handleValue} />\n  </div>\n) : (\n  <p>{title}</p>\n)}\n{edit === id ? (\n  <div>\n    <Button\n      //onClick={handleSaveTodo}\n      variant=\"outlined\"\n      size=\"small\"\n      type=\"button\"\n    >\n      Сохранить\n    </Button>\n  </div>\n) : (\n  <div>\n    <Button onClick={handleEdit} type=\"button\">\n      Редактировать\n    </Button>\n    {!completed && (\n      <Button onClick={handleDone} type=\"button\">\n        Выполнено\n      </Button>\n    )}\n    <Button onClick={handleDelete} type=\"button\">\n      Удалить\n    </Button>\n  </div>\n)}\n\n\nconst handleEdit = (id) => {\n    setEdit(id);\n   // setValue(title);\n  };\n*/\n"]},"metadata":{},"sourceType":"module"}
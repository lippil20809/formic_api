{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/redux-thunk/src/containers/PostDetail/PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPost, getPostComments } from '../../api/posts';\nimport { useRequest } from '../../hooks/useRequest';\nimport * as Statuses from \"../../store/statuses\";\nimport { getPosts, getSlice } from \"../../store/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostDetailWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n_c = PostDetailWrapper;\nconst CommentsWrapper = styled('ol')`\n  margin: 0px 0px 0px 16px;\n  padding: 0px;\n\n  > li {\n    border-bottom: 1px solid gray;\n    padding: 4px;\n\n    > h5 {\n      margin: 0px 0px 8px;\n    }\n\n    > span {\n      font-size: 12px;\n    }\n\n    > p {\n      margin: 4px 0px 0px;\n    }\n  }\n`;\n_c2 = CommentsWrapper;\n\nconst PostDetail = () => {\n  _s();\n\n  const params = useParams();\n  const requestPostComments = useCallback(() => getPostComments(params.id), [params.id]);\n  const {\n    data: comments,\n    loading: loadingComments,\n    error: errorComments\n  } = useRequest(requestPostComments);\n  const requestPostById = useCallback(() => getPost(params.id), [params.id]);\n  const {\n    data: post,\n    loading: loadingPost,\n    error: errorPost\n  } = useRequest(requestPostById);\n  const isLoading = loadingComments || loadingPost;\n  const isError = errorComments || errorPost;\n  return /*#__PURE__*/_jsxDEV(PostDetailWrapper, {\n    children: [isLoading && 'loading...', isError && 'some error...', !isLoading && !isError && post && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(CommentsWrapper, {\n      children: !isLoading && !isError && (comments === null || comments === void 0 ? void 0 : comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostDetail, \"+y0oMWbx1ggCnfQ6tBsZOY1jIXs=\", false, function () {\n  return [useParams, useRequest, useRequest];\n});\n\n_c3 = PostDetail;\nexport default PostDetail;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PostDetailWrapper\");\n$RefreshReg$(_c2, \"CommentsWrapper\");\n$RefreshReg$(_c3, \"PostDetail\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/redux-thunk/src/containers/PostDetail/PostDetail.js"],"names":["React","useCallback","styled","useParams","useDispatch","useSelector","getPost","getPostComments","useRequest","Statuses","getPosts","getSlice","PostDetailWrapper","CommentsWrapper","PostDetail","params","requestPostComments","id","data","comments","loading","loadingComments","error","errorComments","requestPostById","post","loadingPost","errorPost","isLoading","isError","title","body","map","comment","name","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,iBAAzC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;;;AAEA,MAAMC,iBAAiB,GAAGV,MAAM,CAAC,SAAD,CAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMU,iB;AAWN,MAAMC,eAAe,GAAGX,MAAM,CAAC,IAAD,CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;MAAMW,e;;AAsBN,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AAEA,QAAMa,mBAAmB,GAAGf,WAAW,CAAC,MAAMM,eAAe,CAACQ,MAAM,CAACE,EAAR,CAAtB,EAAmC,CAACF,MAAM,CAACE,EAAR,CAAnC,CAAvC;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,QAAR;AAAkBC,IAAAA,OAAO,EAAEC,eAA3B;AAA4CC,IAAAA,KAAK,EAAEC;AAAnD,MAAqEf,UAAU,CAACQ,mBAAD,CAArF;AAEA,QAAMQ,eAAe,GAAGvB,WAAW,CAAC,MAAMK,OAAO,CAACS,MAAM,CAACE,EAAR,CAAd,EAA2B,CAACF,MAAM,CAACE,EAAR,CAA3B,CAAnC;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEO,IAAR;AAAcL,IAAAA,OAAO,EAAEM,WAAvB;AAAoCJ,IAAAA,KAAK,EAAEK;AAA3C,MAAyDnB,UAAU,CAACgB,eAAD,CAAzE;AAEA,QAAMI,SAAS,GAAGP,eAAe,IAAIK,WAArC;AACA,QAAMG,OAAO,GAAGN,aAAa,IAAII,SAAjC;AAEA,sBACE,QAAC,iBAAD;AAAA,eACGC,SAAS,IAAI,YADhB,EAEGC,OAAO,IAAI,eAFd,EAGG,CAACD,SAAD,IAAc,CAACC,OAAf,IAA0BJ,IAA1B,iBACC;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIL,IAAI,CAACM;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAJJ,eASE,QAAC,eAAD;AAAA,gBACG,CAACH,SAAD,IACC,CAACC,OADF,KAECV,QAFD,aAECA,QAFD,uBAECA,QAAQ,CAAEa,GAAV,CAAcC,OAAO,iBACnB;AAAA,gCACE;AAAA,oBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOD,OAAO,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAIF,OAAO,CAACF;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAASE,OAAO,CAAChB,EAAjB;AAAA;AAAA;AAAA;AAAA,cADF,CAFD;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAnCD;;GAAMH,U;UACWX,S,EAG4DK,U,EAGZA,U;;;MAP3DM,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React, { useCallback } from 'react';\n\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPost, getPostComments } from '../../api/posts';\nimport { useRequest } from '../../hooks/useRequest';\nimport * as Statuses from \"../../store/statuses\";\nimport { getPosts, getSlice } from \"../../store/posts\";\n\nconst PostDetailWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n\nconst CommentsWrapper = styled('ol')`\n  margin: 0px 0px 0px 16px;\n  padding: 0px;\n\n  > li {\n    border-bottom: 1px solid gray;\n    padding: 4px;\n\n    > h5 {\n      margin: 0px 0px 8px;\n    }\n\n    > span {\n      font-size: 12px;\n    }\n\n    > p {\n      margin: 4px 0px 0px;\n    }\n  }\n`;\n\nconst PostDetail = () => {\n  const params = useParams();\n\n  const requestPostComments = useCallback(() => getPostComments(params.id), [params.id]);\n  const { data: comments, loading: loadingComments, error: errorComments } = useRequest(requestPostComments);\n\n  const requestPostById = useCallback(() => getPost(params.id), [params.id]);\n  const { data: post, loading: loadingPost, error: errorPost } = useRequest(requestPostById);\n\n  const isLoading = loadingComments || loadingPost;\n  const isError = errorComments || errorPost;\n\n  return (\n    <PostDetailWrapper>\n      {isLoading && 'loading...'}\n      {isError && 'some error...'}\n      {!isLoading && !isError && post && (\n        <>\n          <h1>{post.title}</h1>\n          <p>{post.body}</p>\n        </>\n      )}\n      <CommentsWrapper>\n        {!isLoading &&\n          !isError &&\n          comments?.map(comment => (\n            <li key={comment.id}>\n              <h5>{comment.name}</h5>\n              <span>{comment.email}</span>\n              <p>{comment.body}</p>\n            </li>\n          ))}\n      </CommentsWrapper>\n    </PostDetailWrapper>\n  );\n};\n\nexport default PostDetail;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/AppRouter/src/containers/TodoDetail/TodoDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { getTodo } from \"../../api/todos\";\nimport useRequest from \"../../hooks/useRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoDetailWrapper = styled(\"section\")`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px; \n  box-sizing: border-box;\n`;\n_c = TodoDetailWrapper;\n\nconst TodoDetail = () => {\n  _s();\n\n  const {\n    data: todo,\n    loading,\n    error\n  } = useRequest(getTodo);\n  const [completed, setCompleted] = useState(false);\n  return /*#__PURE__*/_jsxDEV(TodoDetailWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/todos\",\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }, this), loading && \"loading...\", error && \"some error...\", todo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.completed,\n        onChange: () => setCompleted(!completed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoDetail, \"3lXnpzvxIFYfoZTmAG4HvfFsFxQ=\", false, function () {\n  return [useRequest];\n});\n\n_c2 = TodoDetail;\nexport default TodoDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoDetailWrapper\");\n$RefreshReg$(_c2, \"TodoDetail\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/AppRouter/src/containers/TodoDetail/TodoDetail.js"],"names":["React","useState","styled","Link","useParams","getTodo","useRequest","TodoDetailWrapper","TodoDetail","data","todo","loading","error","completed","setCompleted","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AAEA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;;AAEA,MAAMC,iBAAiB,GAAGL,MAAM,CAAC,SAAD,CAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMK,iB;;AAWN,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAIvB,QAAM;AAACC,IAAAA,IAAI,EAACC,IAAN;AAAWC,IAAAA,OAAX;AAAmBC,IAAAA;AAAnB,MAA4BN,UAAU,CAACD,OAAD,CAA5C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AAKA,sBAEE,QAAC,iBAAD;AAAA,4BACG,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAEGU,OAAO,IAAI,YAFd,EAGGC,KAAK,IAAI,eAHZ,EAIGF,IAAI,iBACH;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEL,IAAI,CAACG,SAArC;AAAgD,QAAA,QAAQ,EAAE,MAAMC,YAAY,CAAC,CAACD,SAAF;AAA5E;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAcD,CAxBD;;GAAML,U;UAI8BF,U;;;MAJ9BE,U;AA0BN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport { getTodo } from \"../../api/todos\";\nimport useRequest from \"../../hooks/useRequest\";\n\nconst TodoDetailWrapper = styled(\"section\")`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px; \n  box-sizing: border-box;\n`;\n\nconst TodoDetail = () => {\n\n  \n  \n  const {data:todo,loading,error} = useRequest(getTodo)\n  const [completed, setCompleted] = useState(false);\n  \n  \n\n\n  return (\n    \n    <TodoDetailWrapper>\n       <Link to=\"/todos\">Todos</Link>\n      {loading && \"loading...\"}\n      {error && \"some error...\"}\n      {todo && (\n        <>\n          <h1>{todo.title}</h1>\n          <input type='checkbox' checked={todo.completed} onChange={() => setCompleted(!completed)}/>\n        </>\n      )}\n    </TodoDetailWrapper>\n  );\n};\n\nexport default TodoDetail;"]},"metadata":{},"sourceType":"module"}
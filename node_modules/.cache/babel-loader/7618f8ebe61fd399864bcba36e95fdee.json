{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/react-redux/src/components/TodoItem/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport Form from '../../containers/TodoForm';\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport { createDone, createDelete, createEdit, createSave } from \"../../store/todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoItemContainer = styled(\"li\")`\n  padding: 4px;\n  background-color: ${_ref => {\n  let {\n    completed\n  } = _ref;\n  return completed ? \"green\" : \"transparent\";\n}};\n`;\n_c = TodoItemContainer;\n\nconst TodoItem = _ref2 => {\n  _s();\n\n  let {\n    title,\n    completed,\n    id,\n    titleEdit\n  } = _ref2;\n  const dispatch = useDispatch();\n\n  const handleDone = () => {\n    dispatch(createDone(id));\n  };\n\n  const handleDelete = () => {\n    dispatch(createDelete(id));\n  };\n\n  const [edit, setEdit] = useState(null);\n  const [value, setValue] = useState(title);\n  const handleValue = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  const update = () => {\n    dispatch(createEdit({\n      id,\n      titleEdit\n    }));\n  };\n\n  const handleEdit = () => {\n    update(id, value);\n    setEdit(id);\n    console.log('sdfsdf');\n  };\n\n  const handleSave = () => {\n    dispatch(createSave(value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoItemContainer, {\n    completed: completed,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [edit ? /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: value,\n          onChange: handleValue,\n          id: \"task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSave,\n          type: \"button\",\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleEdit,\n        type: \"button\",\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDone,\n        type: \"button\",\n        children: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDelete,\n        type: \"button\",\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoItem, \"cIQJ8pYzeWMmG3b+glJB/0LCFP4=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = TodoItem;\nexport default TodoItem;\n/*\n{edit === id ? (\n  <div>\n    <Input value={value} onChange={handleValue} />\n  </div>\n) : (\n  <p>{title}</p>\n)}\n{edit === id ? (\n  <div>\n    <Button\n      //onClick={handleSaveTodo}\n      variant=\"outlined\"\n      size=\"small\"\n      type=\"button\"\n    >\n      Сохранить\n    </Button>\n  </div>\n) : (\n  <div>\n    <Button onClick={handleEdit} type=\"button\">\n      Редактировать\n    </Button>\n    {!completed && (\n      <Button onClick={handleDone} type=\"button\">\n        Выполнено\n      </Button>\n    )}\n    <Button onClick={handleDelete} type=\"button\">\n      Удалить\n    </Button>\n  </div>\n)}\n\n\nconst handleEdit = (id) => {\n    setEdit(id);\n   // setValue(title);\n  };\n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoItemContainer\");\n$RefreshReg$(_c2, \"TodoItem\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/react-redux/src/components/TodoItem/TodoItem.js"],"names":["React","useState","useCallback","styled","useDispatch","Form","Button","Input","createDone","createDelete","createEdit","createSave","TodoItemContainer","completed","TodoItem","title","id","titleEdit","dispatch","handleDone","handleDelete","edit","setEdit","value","setValue","handleValue","e","target","update","handleEdit","console","log","handleSave"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport Form from '../../containers/TodoForm'\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport { createDone, createDelete, createEdit,createSave} from \"../../store/todo\";\n\nconst TodoItemContainer = styled(\"li\")`\n  padding: 4px;\n  background-color: ${({ completed }) => (completed ? \"green\" : \"transparent\")};\n`;\n\nconst TodoItem = ({ title, completed, id ,titleEdit}) => {\n  const dispatch = useDispatch();\n  const handleDone = () => {\n    dispatch(createDone(id));\n  };\n  const handleDelete = () => {\n    dispatch(createDelete(id));\n  };\n\n  const [edit, setEdit] = useState(null);\n  const [value, setValue] = useState(title);\n\n  const handleValue = useCallback((e) => {\n  setValue(e.target.value);\n  }, []);\n\n  const update = ( ) => {\n    dispatch(createEdit({id,titleEdit}))\n  }\n\n  const handleEdit = () => {\n    update(id,value)\n    setEdit(id);\n    console.log('sdfsdf')\n  };  \n\n \n  const handleSave = () => {\n    dispatch(createSave(value))\n  }\n\n\n  return (\n    <TodoItemContainer completed={completed}>\n      <div>\n        { edit ? (\n          <form >\n          <Input\n            value={value}\n            onChange={handleValue}\n            id=\"task\"\n          />\n          <Button  onClick={handleSave} type=\"button\">Сохранить</Button>\n        </form>\n        ): (\n            <p>{title}</p>\n          )}\n        \n\n        <Button onClick={handleEdit} type=\"button\">Редактировать</Button>\n        <Button onClick={handleDone} type=\"button\">\n          Выполнено\n        </Button>\n        <Button onClick={handleDelete} type=\"button\">\n          Удалить\n        </Button>\n      </div>\n    </TodoItemContainer>\n  );\n};\n\nexport default TodoItem;\n\n/*\n{edit === id ? (\n  <div>\n    <Input value={value} onChange={handleValue} />\n  </div>\n) : (\n  <p>{title}</p>\n)}\n{edit === id ? (\n  <div>\n    <Button\n      //onClick={handleSaveTodo}\n      variant=\"outlined\"\n      size=\"small\"\n      type=\"button\"\n    >\n      Сохранить\n    </Button>\n  </div>\n) : (\n  <div>\n    <Button onClick={handleEdit} type=\"button\">\n      Редактировать\n    </Button>\n    {!completed && (\n      <Button onClick={handleDone} type=\"button\">\n        Выполнено\n      </Button>\n    )}\n    <Button onClick={handleDelete} type=\"button\">\n      Удалить\n    </Button>\n  </div>\n)}\n\n\nconst handleEdit = (id) => {\n    setEdit(id);\n   // setValue(title);\n  };\n*/\n"]},"metadata":{},"sourceType":"module"}
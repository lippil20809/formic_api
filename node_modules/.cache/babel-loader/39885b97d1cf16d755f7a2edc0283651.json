{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst useRequest = request => {\n  _s();\n\n  const params = useParams();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    request(params).then(data => setData(data)).catch(error => setError(error)).finally(() => setLoading(false));\n  }, [params]);\n  return [data, loading, error, params];\n};\n\n_s(useRequest, \"1qww0GQ9mdojT+b9BHS7etycfR4=\", false, function () {\n  return [useParams];\n});\n\nexport default useRequest;","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/AppRouter/src/hooks/useRequest.js"],"names":["useState","useEffect","useParams","useRequest","request","params","data","setData","loading","setLoading","error","setError","then","catch","finally"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,UAAU,GAAIC,OAAD,IAAa;AAAA;;AAE9B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,IAAAA,OAAO,CAACC,MAAD,CAAP,CACKO,IADL,CACWN,IAAD,IAAUC,OAAO,CAACD,IAAD,CAD3B,EAEKO,KAFL,CAEWH,KAAK,IAAIC,QAAQ,CAACD,KAAD,CAF5B,EAGKI,OAHL,CAGa,MAAML,UAAU,CAAC,KAAD,CAH7B;AAKD,GAPQ,EAOP,CAACJ,MAAD,CAPO,CAAT;AASA,SAAO,CAACC,IAAD,EAAME,OAAN,EAAcE,KAAd,EAAoBL,MAApB,CAAP;AACD,CAlBD;;GAAMF,U;UAEWD,S;;;AAkBjB,eAAeC,UAAf","sourcesContent":["import { useState, useEffect } from \"react\" \nimport { useParams } from \"react-router-dom\";\n\nconst useRequest = (request) => {\n  \n  const params = useParams()\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setLoading(true)\n    request(params)\n        .then((data) => setData(data))\n        .catch(error => setError(error))\n        .finally(() => setLoading(false));\n\n  },[params])\n\n  return [data,loading,error,params]\n}\n\nexport default useRequest\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/AppRouter/src/containers/TodoDetail/TodoDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Link, useParams } from 'react-router-dom';\nimport { getUser } from '../../api/users';\nimport { getTodo } from '../../api/todos';\nimport useRequest from '../../hooks/useRequest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoDetailWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n_c = TodoDetailWrapper;\n\nconst TodoDetail = () => {\n  _s();\n\n  const params = useParams();\n  const requestTodo = useCallback(() => getTodo(params.id), [params.id]);\n  const {\n    data: todo,\n    loading,\n    error\n  } = useRequest(requestTodo);\n  const {\n    completed,\n    setCompleted\n  } = useState(false);\n  const requestAlbumId = useCallback(() => {\n    if (!(todo === null || todo === void 0 ? void 0 : todo.userId)) return Promise.resolve();\n    return getUser(todo === null || todo === void 0 ? void 0 : todo.userId);\n  }, [todo === null || todo === void 0 ? void 0 : todo.userId]);\n  const {\n    data: user\n  } = useRequest(requestAlbumId);\n  return /*#__PURE__*/_jsxDEV(TodoDetailWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/todos\",\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), loading && 'loading...', error && 'some error...', todo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.completed,\n        onChange: () => setCompleted(!completed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/users/${todo === null || todo === void 0 ? void 0 : todo.userId}`,\n      children: user === null || user === void 0 ? void 0 : user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoDetail, \"cdfkhcVvx6MOz4Gk5rOYFjEhcWI=\", false, function () {\n  return [useParams, useRequest, useRequest];\n});\n\n_c2 = TodoDetail;\nexport default TodoDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoDetailWrapper\");\n$RefreshReg$(_c2, \"TodoDetail\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/AppRouter/src/containers/TodoDetail/TodoDetail.js"],"names":["React","useState","useCallback","styled","Link","useParams","getUser","getTodo","useRequest","TodoDetailWrapper","TodoDetail","params","requestTodo","id","data","todo","loading","error","completed","setCompleted","requestAlbumId","userId","Promise","resolve","user","title","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;;AAEA,MAAMC,iBAAiB,GAAGN,MAAM,CAAC,SAAD,CAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMM,iB;;AAWN,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,WAAW,GAAGV,WAAW,CAAC,MAAMK,OAAO,CAACI,MAAM,CAACE,EAAR,CAAd,EAA2B,CAACF,MAAM,CAACE,EAAR,CAA3B,CAA/B;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,IAAR;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA;AAAvB,MAAiCT,UAAU,CAACI,WAAD,CAAjD;AACA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMmB,cAAc,GAAGlB,WAAW,CAAC,MAAM;AACvC,QAAI,EAACa,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEM,MAAP,CAAJ,EAAmB,OAAOC,OAAO,CAACC,OAAR,EAAP;AACnB,WAAOjB,OAAO,CAACS,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEM,MAAP,CAAd;AACD,GAHiC,EAG/B,CAACN,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEM,MAAP,CAH+B,CAAlC;AAIA,QAAM;AAAEP,IAAAA,IAAI,EAAEU;AAAR,MAAiBhB,UAAU,CAACY,cAAD,CAAjC;AAEA,sBACE,QAAC,iBAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,OAAO,IAAI,YAFd,EAGGC,KAAK,IAAI,eAHZ,EAIGF,IAAI,iBACH;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACU;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEV,IAAI,CAACG,SAArC;AAAgD,QAAA,QAAQ,EAAE,MAAMC,YAAY,CAAC,CAACD,SAAF;AAA5E;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBALJ,eAUE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASH,IAAV,aAAUA,IAAV,uBAAUA,IAAI,CAAEM,MAAO,EAAjC;AAAA,gBAAqCG,IAArC,aAAqCA,IAArC,uBAAqCA,IAAI,CAAEE;AAA3C;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA1BD;;GAAMhB,U;UACWL,S,EAEwBG,U,EAOhBA,U;;;MAVnBE,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\n\nimport styled from 'styled-components';\nimport { Link, useParams } from 'react-router-dom';\nimport { getUser } from '../../api/users';\nimport { getTodo } from '../../api/todos';\nimport useRequest from '../../hooks/useRequest';\n\nconst TodoDetailWrapper = styled('section')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 800px;\n  margin: 8px auto;\n  padding: 4px;\n  box-sizing: border-box;\n`;\n\nconst TodoDetail = () => {\n  const params = useParams();\n  const requestTodo = useCallback(() => getTodo(params.id), [params.id]);\n  const { data: todo, loading, error } = useRequest(requestTodo);\n  const { completed, setCompleted } = useState(false);\n\n  const requestAlbumId = useCallback(() => {\n    if (!todo?.userId) return Promise.resolve();\n    return getUser(todo?.userId);\n  }, [todo?.userId]);\n  const { data: user } = useRequest(requestAlbumId);\n\n  return (\n    <TodoDetailWrapper>\n      <Link to=\"/todos\">Todos</Link>\n      {loading && 'loading...'}\n      {error && 'some error...'}\n      {todo && (\n        <>\n          <h1>{todo.title}</h1>\n          <input type=\"checkbox\" checked={todo.completed} onChange={() => setCompleted(!completed)} />\n        </>\n      )}\n      <Link to={`/users/${todo?.userId}`}>{user?.name}</Link>\n    </TodoDetailWrapper>\n  );\n};\n\nexport default TodoDetail;\n"]},"metadata":{},"sourceType":"module"}
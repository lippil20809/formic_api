{"ast":null,"code":"import * as Statuses from '../statuses';\nimport { SET_POSTS, SET_POSTS_REQUEST_STATUS_FAILURE, SET_POSTS_REQUEST_STATUS_PENDING } from './posts.actions';\nconst initialState = {\n  postsRequestStatus: Statuses.UNCALLED,\n  posts: []\n};\nexport const postsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_POSTS:\n      return { ...state,\n        posts: action.payload,\n        postsRequestStatus: Statuses.SUCCESS\n      };\n\n    case SET_POSTS_REQUEST_STATUS_FAILURE:\n      return { ...state,\n        postsRequestStatus: Statuses.FAILURE\n      };\n\n    case SET_POSTS_REQUEST_STATUS_PENDING:\n      return { ...state,\n        posts: Statuses.PENDING\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/redux-thunk/src/store/posts/posts.reducer.js"],"names":["Statuses","SET_POSTS","SET_POSTS_REQUEST_STATUS_FAILURE","SET_POSTS_REQUEST_STATUS_PENDING","initialState","postsRequestStatus","UNCALLED","posts","postsReducer","state","action","type","payload","SUCCESS","FAILURE","PENDING"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,aAA1B;AACA,SACEC,SADF,EAEEC,gCAFF,EAGEC,gCAHF,QAIO,iBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,kBAAkB,EAAEL,QAAQ,CAACM,QADV;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,OAAO,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,SAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFT;AAGLP,QAAAA,kBAAkB,EAAEL,QAAQ,CAACa;AAHxB,OAAP;;AAKA,SAAKX,gCAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,kBAAkB,EAAEL,QAAQ,CAACc;AAFxB,OAAP;;AAKA,SAAKX,gCAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,KAAK,EAAEP,QAAQ,CAACe;AAFX,OAAP;;AAIN;AACE,aAAON,KAAP;AAnBJ;AAqBD,CAtBM","sourcesContent":["import * as Statuses from '../statuses'\nimport {\n  SET_POSTS,\n  SET_POSTS_REQUEST_STATUS_FAILURE,\n  SET_POSTS_REQUEST_STATUS_PENDING\n} from './posts.actions'\n\nconst initialState = {\n  postsRequestStatus: Statuses.UNCALLED,\n  posts: [],\n};\n\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n        postsRequestStatus: Statuses.SUCCESS\n      }\n      case SET_POSTS_REQUEST_STATUS_FAILURE:\n        return {\n          ...state,\n          postsRequestStatus: Statuses.FAILURE\n          \n        }\n        case SET_POSTS_REQUEST_STATUS_PENDING:\n          return {\n            ...state,\n            posts: Statuses.PENDING\n          }    \n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
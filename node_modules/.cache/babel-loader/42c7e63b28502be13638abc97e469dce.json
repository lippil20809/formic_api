{"ast":null,"code":"var _jsxFileName = \"/Users/filippkovalenko/Desktop/\\u0443\\u0447\\u0435\\u0431\\u0430 /react-1/react-redux/src/providers/ThemeProvider/ThemeProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useCallback, createContext, useContext } from \"react\";\nimport { ThemeProvider as StyledThemeProvider, createGlobalStyle } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n  body {\n    padding: 0px;\n    margin: 0px;\n    width: 100%;\n    height: 100vh;\n    background-color: ${props => props.theme.backgroundColor.main}\n  }\n`;\n_c = GlobalStyle;\nconst ThemeContext = /*#__PURE__*/createContext({});\nexport const useTheme = () => {\n  _s();\n\n  return useContext(ThemeContext);\n};\n\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst ThemeProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [theme, setTheme] = useState(\"light\");\n  const toggleTheme = useCallback(() => {\n    setTheme(prev => prev === \"dark\" ? \"light\" : \"dark\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledThemeProvider, {\n    theme: theme === \"light\" ? lightTheme : darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n      value: {\n        theme,\n        toggleTheme\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ThemeProvider, \"FXtnNdQeocgQteiQKYuVjZAkIio=\");\n\n_c2 = ThemeProvider;\nexport default ThemeProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"ThemeProvider\");","map":{"version":3,"sources":["/Users/filippkovalenko/Desktop/учеба /react-1/react-redux/src/providers/ThemeProvider/ThemeProvider.js"],"names":["React","useState","useCallback","createContext","useContext","ThemeProvider","StyledThemeProvider","createGlobalStyle","lightTheme","darkTheme","GlobalStyle","props","theme","backgroundColor","main","ThemeContext","useTheme","children","setTheme","toggleTheme","prev"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,aAAvC,EAAsDC,UAAtD,QAAwE,OAAxE;AACA,SACEC,aAAa,IAAIC,mBADnB,EAEEC,iBAFF,QAGO,mBAHP;AAKA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,aAAtC;;AAEA,MAAMC,WAAW,GAAGH,iBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA,wBAAyBI,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,eAAZ,CAA4BC,IAAK;AACpE;AACA,CARA;KAAMJ,W;AAUN,MAAMK,YAAY,gBAAGZ,aAAa,CAAC,EAAD,CAAlC;AAEA,OAAO,MAAMa,QAAQ,GAAG;AAAA;;AAAA,SAAMZ,UAAU,CAACW,YAAD,CAAhB;AAAA,CAAjB;;GAAMC,Q;;AAEb,MAAMX,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEY,IAAAA;AAAF,GAAiB;AACtC,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBjB,QAAQ,CAAC,OAAD,CAAlC;AAEA,QAAMkB,WAAW,GAAGjB,WAAW,CAAC,MAAM;AACpCgB,IAAAA,QAAQ,CAAEE,IAAD,IAAWA,IAAI,KAAK,MAAT,GAAkB,OAAlB,GAA4B,MAAxC,CAAR;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAMA,sBACE,QAAC,mBAAD;AAAqB,IAAA,KAAK,EAAER,KAAK,KAAK,OAAV,GAAoBJ,UAApB,GAAiCC,SAA7D;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAF;AAASO,QAAAA;AAAT,OAA9B;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjBD;;IAAMZ,a;;MAAAA,a;AAmBN,eAAeA,aAAf","sourcesContent":["import React, { useState, useCallback, createContext, useContext } from \"react\";\nimport {\n  ThemeProvider as StyledThemeProvider,\n  createGlobalStyle,\n} from \"styled-components\";\n\nimport { lightTheme, darkTheme } from \"./constants\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    padding: 0px;\n    margin: 0px;\n    width: 100%;\n    height: 100vh;\n    background-color: ${(props) => props.theme.backgroundColor.main}\n  }\n`;\n\nconst ThemeContext = createContext({});\n\nexport const useTheme = () => useContext(ThemeContext);\n\nconst ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = useCallback(() => {\n    setTheme((prev) => (prev === \"dark\" ? \"light\" : \"dark\"));\n  }, []);\n\n\n  \n  return (\n    <StyledThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <GlobalStyle />\n      <ThemeContext.Provider value={{ theme, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </StyledThemeProvider>\n  );\n};\n\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}